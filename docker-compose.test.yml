services:
  proxy:
    image: ghcr.io/liamwahlstroem/proxy:latest
    container_name: proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    expose:
      - 80
      - 443
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: >
      /bin/sh -c "while :; do sleep 6h && nginx -s reload; done & nginx -g 'daemon off;'"
  messageQueue:
    image: ghcr.io/liamwahlstroem/queue:latest
    container_name: messagequeue
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
  userService:
    image: ghcr.io/liamwahlstroem/user-service:latest
    container_name: userService
    restart: always
    volumes:
      - /test/testdata.json:/etc/db/db.json
    depends_on:
      - messageQueue
  testUserService:
    build:
      context: ./usermanagement
    container_name: userService
    restart: always
    volumes:
      - /test/testdata.json:/etc/db/db.json
    depends_on:
      - messageQueue
  login:
    build:
      context: ./login
    container_name: login
    restart: always
    ports:
      - 5000:5000
    expose:
      - 5000
    depends_on:
      - messageQueue
      - userService
  register:
    build:
      context: ./register    
    container_name: register
    restart: always
    ports:
      - 5000:5000
    expose:
      - 5000
    depends_on:
      - messageQueue
      - userService
  addition:
    build:
      context: ./addition    
    container_name: addition
    restart: always
    ports:
      - 5000:5000
    expose:
      - 5000
    volumes:
      - /etc/db/addition/:/etc/db/
    depends_on:
      - messageQueue
      - userService
  subtract:
    build:
      context: ./subtract
    container_name: subtract
    restart: always
    ports: 
      - 5000:5000
    expose:
      - 5000
    volumes:
      - /etc/db/subtract/:/etc/db/
    depends_on:
      - messageQueue
      - userService
  division:
    build:
      context: ./division
    container_name: division
    restart: always
    ports: 
      - 5000:5000
    expose:
      - 5000
    volumes:
      - /etc/db/division/:/etc/db/
    depends_on:
      - messageQueue
      - userService
  multiplication:
    build:
      context: ./multiplication
    container_name: multiplication
    restart: always
    ports:
      - 5000:5000
    expose:
      - 5000
    volumes:
      - /etc/db/multiplication/:/etc/db/
    depends_on:
      - messageQueue
      - userService
